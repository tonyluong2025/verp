<?xml version="1.0" encoding="utf-8"?>
<verp>

    <!-- Checkout form -->
    <template id="checkout" name="Payment Checkout">
        <!-- Variables description:
            - 'acquirers' - The payment acquirers compatible with the current transaction
            - 'tokens' - The payment tokens of the current partner and payment acquirers
            - 'defaultTokenId' - The id of the token that should be pre-selected. Optional
            - 'feesByAcquirer' - The dict of transaction fees for each acquirer. Optional
            - 'showTokenizeInput' - Whether the option to save the payment method is shown
            - 'referencePrefix' - The custom prefix to compute the full transaction reference
            - 'amount' - The amount to pay. Optional (sale_subscription)
            - 'currency' - The currency of the transaction, as a `res.currency` record
            - 'partnerId' - The id of the partner on behalf of whom the payment should be made
            - 'accessToken' - The access token used to authenticate the partner.
            - 'transactionRoute' - The route used to create a transaction when the user clicks Pay
            - 'landingRoute' - The route the user is redirected to after the transaction
            - 'footerTemplateId' - The template id for the submit button. Optional
            - 'invoiceId' - The id of the account move being paid. Optional
        -->
        <form name="oPaymentCheckout"
              class="o-payment-form mt-3 clearfix"
              t-att-data-reference-prefix="referencePrefix"
              t-att-data-amount="amount"
              t-att-data-currency-id="bool(currency) &amp;&amp; currency.id"
              t-att-data-partner-id="partnerId"
              t-att-data-access-token="accessToken"
              t-att-data-transaction-route="transactionRoute"
              t-att-data-landing-route="landingRoute"
              t-att-data-allow-token-selection="true"
              t-att-data-invoice-id="invoiceId">

            <t t-set="acquirerCount" t-value="bool(acquirers) ? len(acquirers) : 0"/>
            <t t-set="tokenCount" t-value="bool(tokens) ? len(tokens) : 0"/>
            <!-- Check the radio button of the default token, if set, or of the first acquirer if
                 it is the only payment option -->
            <t t-set="defaultPaymentOptionId"
               t-value="bool(defaultTokenId) &amp;&amp; tokenCount > 0 ? 
                    defaultTokenId : acquirerCount == 1 &amp;&amp; tokenCount == 0 ? 
                    acquirers[0].id : null"/>
            <t t-set="feesByAcquirer" t-value="bool(feesByAcquirer) ? feesByAcquirer : new Map()"/>
            <t t-set="footerTemplateId"
               t-value="bool(footerTemplateId) ? footerTemplateId : 'payment.footer'"/>

            <div class="card">
                <!-- === Acquirers === -->
                <t t-foreach="acquirers" t-as="acquirer">
                    <div name="o-payment-option-card" class="card-body o-payment-option-card">
                        <label>
                            <!-- === Radio button === -->
                            <!-- Only shown if linked to the only payment option -->
                            <input name="oPaymentRadio"
                                   type="radio"
                                   t-att-checked="acquirer.id == defaultPaymentOptionId"
                                   t-att-class="acquirerCount + tokenCount > 1 ? '' : 'd-none'"
                                   t-att-data-payment-option-id="acquirer.id"
                                   t-att-data-provider="await acquirer.provider"
                                   data-payment-option-type="acquirer"/>
                            <!-- === Acquirer name === -->
                            <span class="paymentOptionName">
                                <b t-esc="await acquirer.displayAs || await acquirer.label"/>
                            </span>
                            <!-- === "Test Mode" badge === -->
                            <span t-if="await acquirer.state == 'test'"
                                  class="badge-pill badge-warning ml-1">
                                Test Mode
                            </span>
                            <!-- === Extra fees badge === -->
                            <t t-if="feesByAcquirer.has(acquirer)">
                                <span class="badge-pill badge-secondary ml-1">
                                    + <t t-esc="feesByAcquirer.get(acquirer)"
                                         t-options="{'widget': 'monetary', 'displayCurrency': currency}"/>
                                    Fees
                                </span>
                            </t>
                        </label>
                        <!-- === Payment icon list === -->
                        <t t-call="payment.iconList"/>
                        <!-- === Help message === -->
                        <div t-if="! isHtmlEmpty(await acquirer.preMsg)"
                             t-out="acquirer.preMsg"
                             class="text-muted ml-3"/>
                    </div>
                    <!-- === Acquirer inline form === -->
                    <div t-attf-id="oPaymentAcquirerInlineForm{{acquirer.id}}"
                         name="oPaymentInlineForm"
                         class="card-footer d-none">
                        <!-- === Inline form content (filled by acquirer) === -->
                        <t t-if="await (await acquirer.sudo())._shouldBuildInlineForm(false)">
                            <t t-set="inlineFormXmlid"
                               t-value="await (await (await acquirer.sudo()).inlineFormViewId).xmlid"/>
                            <div t-if="inlineFormXmlid" class="clearfix">
                                <t t-call="{{inlineFormXmlid}}">
                                    <t t-set="acquirerId" t-value="acquirer.id"/>
                                </t>
                            </div>
                        </t>
                        <!-- === "Save my payment details" checkbox === -->
                        <!-- Only included if partner is known and if the choice is given -->
                        <t t-set="tokenizationRequired"
                           t-value="await acquirer._isTokenizationRequired({'provider': await acquirer.provider})"/>
                        <label t-if="showTokenizeInput &amp;&amp; await acquirer.allowTokenization &amp;&amp; ! tokenizationRequired">
                            <input name="oPaymentSaveAsToken" type="checkbox"/>
                            Save my payment details
                        </label>
                    </div>
                </t>
                <!-- === Tokens === -->
                <t t-foreach="tokens" t-as="token">
                    <div name="oPaymentOptionCard" class="card-body o-payment-option-card">
                        <label>
                            <!-- === Radio button === -->
                            <input name="oPaymentRadio"
                                   type="radio"
                                   t-att-checked="token.id == defaultPaymentOptionId"
                                   t-att-data-payment-option-id="token.id"
                                   t-att-data-provider="await token.provider"
                                   data-payment-option-type="token"/>
                            <!-- === Token name === -->
                            <span class="paymentOptionName" t-esc="await token.label"/>
                            <!-- === "V" check mark === -->
                            <t t-call="payment.verifiedTokenCheckmark"/>
                        </label>
                    </div>
                    <!-- === Token inline form === -->
                    <div t-attf-id="oPaymentTokenInlineForm{{token.id}}"
                         name="oPaymentInlineForm"
                         class="card-footer d-none"/>
                </t>
            </div>
            <!-- === "Pay" button === -->
            <t t-call="{{footerTemplateId}}">
                <t t-set="label">Pay</t>
                <t t-set="iconClass" t-value="'fa-lock'"/>
            </t>
        </form>
    </template>

    <!-- Manage (token create and deletion) form -->
    <template id="manage" name="Payment Manage">
        <!-- Variables description:
            - 'acquirers' - The payment acquirers supporting tokenization
            - 'tokens' - The set of payment tokens of the current partner
            - 'default_token_id' - The id of the token that should be pre-selected. Optional
            - 'reference_prefix' - The custom prefix to compute the full transaction reference
            - 'partnerId' - The id of the partner managing the tokens
            - 'accessToken' - The access token used to authenticate the partner.
            - 'transaction_route' - The route used to create a validation transaction
            - 'assign_token_route' - The route to call to assign a token to a record. If set, it
                                     enables the token assignation mechanisms: creation of a new
                                     token through a refunded transaction and assignation of an
                                     existing token
            - 'landing_route' - The route the user is redirected to at then end of the flow
            - 'footer_template_id' - The template id for the submit button. Optional
        -->
        <form name="oPaymentManage"
              class="o-payment-form mt-3 clearfix"
              t-att-data-reference-prefix="referencePrefix"
              t-att-data-partner-id="partnerId"
              t-att-data-access-token="accessToken"
              t-att-data-invoice-id="invoiceId"
              t-att-data-transaction-route="transactionRoute"
              t-att-data-assign-token-route="assignTokenRoute"
              t-att-data-landing-route="landingRoute"
              t-att-data-allow-token-selection="bool(assignTokenRoute)">
            <t t-set="acquirerCount" t-value="bool(acquirers) ? len(acquirers) : 0"/>
            <t t-set="tokenCount" t-value="bool(tokens) ? len(tokens) : 0"/>
            <t t-set="noSelectableToken" t-value="tokenCount == 0 || !assignTokenRoute"/>
            <t t-set="defaultPaymentOptionId"
               t-value="bool(defaultTokenId) &amp;&amp; tokenCount > 0 ? 
                    defaultTokenId : acquirerCount == 1 &amp;&amp; noSelectableToken ? 
                    acquirers[0].id : null"/>
            <t t-set="footerTemplateId"
               t-value="bool(footerTemplateId) || 'payment.footer'"/>
            <div class="card">
                <!-- === Acquirers === -->
                <t t-foreach="acquirers" t-as="acquirer">
                    <div name="oPaymentOptionCard" class="card-body o-payment-option-card">
                        <label>
                            <!-- === Radio button === -->
                            <!-- Only shown if linked to the only payment option -->
                            <input name="oPaymentRadio"
                                   type="radio"
                                   t-att-checked="acquirer.id == defaultPaymentOptionId"
                                   t-att-class="acquirerCount + tokenCount > 1 ? '' : 'd-none'"
                                   t-att-data-payment-option-id="acquirer.id"
                                   t-att-data-provider="await acquirer.provider"
                                   data-payment-option-type="acquirer"/>
                            <!-- === Acquirer name === -->
                            <span class="paymentOptionName">
                                <b><t t-esc="await acquirer.displayAs || await acquirer.label"/></b>
                            </span>
                            <!-- === "Test Mode" badge === -->
                            <span t-if="await acquirer.state == 'test'"
                                  class="badge-pill badge-warning"
                                  style="margin-left:5px">
                                Test Mode
                            </span>
                        </label>
                        <!-- === Payment icon list === -->
                        <t t-call="payment.iconList"/>
                        <!-- === Help message === -->
                        <div t-if="! isHtmlEmpty(await acquirer.preMsg)"
                             t-out="await acquirer.preMsg"
                             class="text-muted ml-3"/>
                    </div>
                    <!-- === Acquirer inline form === -->
                    <t t-if="await (await acquirer.sudo())._shouldBuildInlineForm(true)">
                        <div t-attf-id="oPaymentAcquirerInlineForm_{{acquirer.id}}"
                             name="oPaymentInlineForm"
                             class="card-footer d-none">
                            <!-- === Inline form content (filled by acquirer) === -->
                            <t t-set="inlineFormXmlid"
                               t-value="await (await (await acquirer.sudo()).inlineFormViewId).xmlid"/>
                            <div t-if="inlineFormXmlid" class="clearfix">
                                <t t-call="{{inlineFormXmlid}}">
                                    <t t-set="acquirerId" t-value="acquirer.id"/>
                                </t>
                            </div>
                        </div>
                    </t>
                </t>
                <!-- === Tokens === -->
                <t t-foreach="tokens" t-as="token">
                    <div name="oPaymentOptionCard" class="card-body o-payment-option-card">
                        <label>
                            <!-- === Radio button === -->
                            <!-- Only shown if 'assign_token_route' is set -->
                            <input name="oPaymentRadio"
                                   type="radio"
                                   t-att-checked="token.id == defaultPaymentOptionId"
                                   t-att-class="bool(assignTokenRoute) ? '' : 'd-none'"
                                   t-att-data-payment-option-id="token.id"
                                   t-att-data-provider="await token.provider"
                                   data-payment-option-type="token"/>
                            <!-- === Token name === -->
                            <span class="payment-option-name" t-esc="await token.label"/>
                            <!-- === "V" check mark === -->
                            <t t-call="payment.verifiedTokenCheckmark"/>
                        </label>
                        <!-- === "Delete" token button === -->
                        <button name="oPaymentDeleteToken"
                                class="btn btn-primary btn-sm float-right">
                            <i class="fa fa-trash"/> Delete
                        </button>
                    </div>
                    <!-- === Token inline form === -->
                    <div t-attf-id="oPaymentTokenInlineForm_{{token.id}}"
                         name="oPaymentInlineForm"
                         class="card-footer d-none"/>
                </t>
            </div>
            <!-- === "Save Payment Method" button === -->
            <t t-call="{{footerTemplateId}}">
                <t t-set="label">Save Payment Method</t>
                <t t-set="iconClass" t-value="'fa-plus-circle'"/>
            </t>
        </form>
    </template>

    <!-- Expandable payment icon list -->
    <template id="iconList" name="Payment Icon List">
        <ul class="payment-icon-list float-right list-inline" data-max-icons="3">
            <t t-set="iconIndex" t-value="0"/>
            <t t-set="MAX_ICONS" t-value="3"/>
            <!-- === Icons === -->
            <!-- Only shown if in the first 3 icons -->
            <t t-foreach="await (await acquirer.paymentIconIds).filtered(r => r.imagePaymentForm)" t-as="icon">
                <li t-attf-class="list-inline-item{{(iconIndex &lt; MAX_ICONS) ? '' : ' d-none'}}">
                    <span t-esc="await icon.imagePaymentForm"
                          t-options="{'widget': 'image', 'alt-field': 'label'}"
                          data-toggle="tooltip"
                          t-att-title="await icon.label"/>
                </li>
                <t t-set="iconIndex" t-value="iconIndex + 1"/>
            </t>
            <t t-if="iconIndex >= MAX_ICONS">
                <!-- === "show more" button === -->
                <!-- Only displayed if too many payment icons -->
                <li style="display:block;" class="list-inline-item">
                    <span class="float-right more_option text-info">
                        <a name="oPaymentIconMore"
                           data-toggle="tooltip"
                           t-att-title="(await (await acquirer.paymentIconIds).slice(MAX_ICONS).map(icon => icon.label)).join(', ')">
                            show more
                        </a>
                    </span>
                </li>
                <!-- === "show less" button === -->
                <!-- Only displayed when "show more" is clicked -->
                <li style="display:block;" class="list-inline-item d-none">
                    <span class="float-right more-option text-info">
                        <a name="oPaymentIconLess">show less</a>
                    </span>
                </li>
            </t>
        </ul>
    </template>

    <!-- Verified token checkmark -->
    <template id="verifiedTokenCheckmark" name="Payment Verified Token Checkmark">
        <t t-if="0" name="paymentTestHook"/>
        <t t-else="">
            <i t-if="await token.verified" class="fa fa-check text-success"
                title="This payment method has been verified by our system."
                role="img"
                aria-label="Ok"/>
            <i t-else="" class="fa fa-check text-muted"
                title="This payment method has not been verified by our system."
                role="img"
                aria-label="Not verified"/>
        </t>
    </template>

    <!-- Generic footer for payment forms -->
    <template id="footer" name="Payment Footer">
        <!-- Variables description:
            - 'label' - The label for the submit button
            - 'iconClass' - The Font Awesome icon class (e.g. 'fa-lock') for the submit button
        -->
        <div class="float-right mt-2">
            <button name="oPaymentSubmitButton"
                    type="submit"
                    class="btn btn-primary btn-lg mb8 mt8"
                    disabled="true"
                    t-att-data-icon-class="icon-class">
                <i t-attf-class="fa {{iconClass}}"/> <t t-esc="label"/>
            </button>
        </div>
    </template>

    <!-- Transaction status in portal -->
    <template id="transactionStatus">
        <!-- Variables description:
            - 'tx' - The transaction whose status must be displayed
        -->
        <t t-set="sudo" t-value="await (await tx.acquirerId).sudo()">
        <div t-if="await tx.state == 'pending' &amp;&amp; ! isHtmlEmpty(await sudo.pendingMsg)"
             class="alert alert-warning alert-dismissible">
            <span t-out="await sudo.pendingMsg"/>
            <button class="close" data-dismiss="alert" title="Dismiss">×</button>
        </div>
        <div t-elif="await tx.state == 'authorized' &amp;&amp; ! isHtmlEmpty(await sudo.authMsg)"
             class="alert alert-success alert-dismissible">
            <span t-out="await sudo.authMsg"/>
            <button class="close" data-dismiss="alert" title="Dismiss">×</button>
        </div>
        <div t-elif="await tx.state == 'done' &amp;&amp; !isHtmlEmpty(await sudo.doneMsg)"
             class="alert alert-success alert-dismissible">
            <span t-out="await sudo.doneMsg"/>
            <button class="close" data-dismiss="alert" title="Dismiss">×</button>
        </div>
        <div t-elif="await tx.state == 'cancel' &amp;&amp; !isHtmlEmpty(await sudo.cancelMsg)"
             class="alert alert-danger alert-dismissible">
            <span t-out="await sudo.cancelMsg"/>
            <button class="close" data-dismiss="alert" title="Dismiss">×</button>
        </div>
        <span t-if="await tx.stateMessage" t-esc="await tx.stateMessage"/>
    </template>

</verp>
