<?xml version="1.0" encoding="utf-8"?>
<verp>

<!-- This contains the tour assets. They are included during testing. -->
<template id="point_of_sale.index" name="POS Index">&lt;!DOCTYPE html&gt;
<html>
    <head>
        <title>Verp POS</title>

        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>
        <meta http-equiv="content-type" content="text/html, charset=utf-8" />

        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no"/>
        <meta name="apple-mobile-web-app-capable" content="yes"/>
        <meta name="mobile-web-app-capable" content="yes"/>

        <link rel="shortcut icon"    sizes="196x196" href="/point_of_sale/static/src/img/touch-icon-196.png"/>
        <link rel="shortcut icon"    sizes="128x128" href="/point_of_sale/static/src/img/touch-icon-128.png"/>
        <link rel="apple-touch-icon"                 href="/point_of_sale/static/src/img/touch-icon-iphone.png"/>
        <link rel="apple-touch-icon" sizes="76x76"   href="/point_of_sale/static/src/img/touch-icon-ipad.png"/>
        <link rel="apple-touch-icon" sizes="120x120" href="/point_of_sale/static/src/img/touch-icon-iphone-retina.png"/>
        <link rel="apple-touch-icon" sizes="152x152" href="/point_of_sale/static/src/img/touch-icon-ipad-retina.png"/>

        <style> body { background: #222; } </style>

        <link rel="shortcut icon" href="/point_of_sale/static/src/img/favicon.ico" type="image/x-icon"/>

        <script type="text/javascript">
            var verp = <t t-out="JSON.stringify({
                'csrfToken': await request.csrfToken(null),
                '__session_info__': sessionInfo,
                'loginNumber': loginNumber,
                'debug': debug,
            })"/>;
            // Prevent the menuService to load anything. In an ideal world, POS assets would only contain
            // what is genuinely necessary, and not the whole backend.
            verp.loadMenusPromise = Promise.resolve();
            verp.loadTemplatesPromise = fetch(\`/web/webclient/qweb/\x24{verp.__session_info__.cacheHashes.qweb}?bundle=web.assetsQweb\`).then(doc => doc.text());
        </script>

        <t t-call="point_of_sale.assetsCommon"/>
        <t t-call="web.conditionalAssetsTests"/>
        <t t-call-assets="point_of_sale.assetsBackendProdOnly" />
    </head>
    <body>
    </body>
</html>
</template>

</verp>
